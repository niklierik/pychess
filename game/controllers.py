import actors.board


class Controller:
    def __init__(self) -> None:
        pass

    def update(self, board: actors.board.Board) -> bool:
        """
        Updates controller each tick if it is their turn
        Returns:
            bool: whether they finished their turn
        """
        return True


# The default player controller
class PlayerController(Controller):
    pass


# Another player, whose moves coming from network
class NetworkController(Controller):
    pass


# AI whose moves are generated by stockfish
class AIController(Controller):
    def __init__(self, lvl: int):
        self._lvl = lvl

    @property
    def lvl(self):
        return self._lvl


class AIControllerLvl1(AIController):
    pass


class AIControllerLvl2(AIController):
    pass


class AIControllerLvl3(AIController):
    pass


class AIControllerLvl4(AIController):
    pass


class AIControllerLvl5(AIController):
    pass


AIControllers: list[type] = [
    AIControllerLvl1,
    AIControllerLvl2,
    AIControllerLvl3,
    AIControllerLvl4,
    AIControllerLvl5,
]


class InvalidAILvlException(ValueError):
    """Raised when the given AI level is invalid. (Less than 1 or greater than 5)"""


def ai_controller_of(lvl: int) -> AIController:
    if 1 <= lvl and lvl <= 5:
        return AIControllers[lvl - 1](lvl)
    raise InvalidAILvlException(f"AI level must be between 1 and 5, {lvl} is invalid.")
